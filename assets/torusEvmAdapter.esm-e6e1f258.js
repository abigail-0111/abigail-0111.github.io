import{l as oe,S as H,_ as o,g as J,a as y,O as le,p as V,c as de,J as ue,b as ce,d as P,m as he,B as x,s as pe,e as me,f as ge,W as U,A as fe,C as Ae,h as ye,i as S,j as L,k,n as O,o as Ce,q}from"./home-031270b4.js";import{d as Te}from"./index-146f08d4.js";import"./index-def8dafd.js";import"./_plugin-vue_export-helper-c27b6911.js";function Se(n,e){if(n==null)return{};var t={},i=Object.keys(n),s,r;for(r=0;r<i.length;r++)s=i[r],!(e.indexOf(s)>=0)&&(t[s]=n[s]);return t}function Ie(n,e){if(n==null)return{};var t=Se(n,e),i,s;if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(s=0;s<r.length;s++)i=r[s],!(e.indexOf(i)>=0)&&Object.prototype.propertyIsEnumerable.call(n,i)&&(t[i]=n[i])}return t}const R={GOOGLE:"google",FACEBOOK:"facebook",TWITCH:"twitch",REDDIT:"reddit",DISCORD:"discord",EMAIL_PASSWORDLESS:"torus-auth0-email-passwordless"},G={[R.GOOGLE]:"tkey-google",[R.FACEBOOK]:"tkey-facebook",[R.TWITCH]:"tkey-twitch",[R.REDDIT]:"tkey-reddit",[R.DISCORD]:"tkey-discord",[R.EMAIL_PASSWORDLESS]:"tkey-auth0-email-passwordless"},g={MOONPAY:"moonpay",WYRE:"wyre",RAMPNETWORK:"rampnetwork",XANPOOL:"xanpool",MERCURYO:"mercuryo",TRANSAK:"transak",BANXA:"banxa"},h={MAINNET:"mainnet",MATIC:"matic",BSC_MAINNET:"bsc_mainnet",AVALANCHE_MAINNET:"avalanche_mainnet",XDAI:"xdai",ARBITRUM_MAINNET:"arbitrum_mainnet",OPTIMISM_MAINNET:"optimism_mainnet"},we={PRODUCTION:"production",DEVELOPMENT:"development",BINANCE:"binance",TESTING:"testing",LRC:"lrc",BETA:"beta",BNB:"bnb",POLYGON:"polygon",ALPHA:"alpha"},b={BOTTOM_LEFT:"bottom-left",TOP_LEFT:"top-left",BOTTOM_RIGHT:"bottom-right",TOP_RIGHT:"top-right"},ve=["ETH","USDT","USDC","TUSD","EOSDT","USD","DAI","GUSD","DKKT","PAX","ILS","RUB","BYN","EUR","GBP","JPY","KRW","PLN","MXN","AUD","BRL","CAD","CHF","KPW","LAK","LBP","LKR","XOF","CNHT","DOGE","UAH","TRY","HKD","XJP","SGD","USC","NZD","NGN","RUR","COP","GHS","EGP","IDR","BHD","CRC","PEN","AED","DOP","PKR","HUF","VND","XAR","LTC","RON","OMR","MYR","DKK","UGX","ZMW","SAR","SEK","GEL","RWF","IRR","TZS","CNY","VEF","BDT","HRK","CLP","THB","XAF","ARS","UYU","SZL","KZT","NOK","KES","PAB","INR","CZK","MAD","TWD","PHP","ZAR","BOB","CDF","DASH","VES","ISK","MWK","BAM","TTD","XRP","JOD","RSD","HNL","BGN","GTQ","BWP","XMR","MMK","QAR","AOA","KWD","MUR","WUSD","WEUR","WAVES","WTRY","LRD","LSL","LYD","AWG","MDL","BTO","EURS","CHFT","MKD","MNT","MOP","MRO","MVR","VOLLAR","CKUSD","KHR","VUV","BITCNY","QC","BBD","NAD","NPR","PGK","PYG","BIF","BMD","BND","XLM","BNB","SCR","BAT","CRO","HT","KCS","LEO","LINK","MKR","NPXS","OMG","REP","ZB","ZIL","ZRX","BCH","BZD","CUP","CVE","DJF","DZD","ERN","ETB","FJD","FKP","BUSD","ANCT","ALL","AMD","ANG","CNYX","IQD","UZS","TND","GGP","XAU","KGS","GIP","JMD","ZEC","USDP","BSV","EMC2","SNT","GTO","POWR","EUSD","EURT","BCY","BTS","ATM","BLOCKPAY","ARDR","AMP","B2X","BITGOLD","BITEUR","ATB","BITUSD","AGRS","DFXT","HIKEN","BIX","KNC","EOS","COB","COSS","BMH","NANO","BDG","BNT","XVG","LKK1Y","LKK","USDK","EURN","NZDT","JSE","GMD","GNF","GYD","YER","XPF","HTG","SLL","SOS","WST","SVC","SYP","NEO","KMF","JUMP","AYA","BLAST","WGR","BCN","BTG","URALS","INN","USDQ","CNH","HUSD","BKRW","NZDX","EURX","CADX","USDEX","JPYX","AUDX","VNDC","EON","GBPX","CHFX","USDJ","IDRT","USDS","USDN","BIDR","IDK","BSD","BTN","KYD","NIO","SBD","SDG","SHP","TOP","XCD","XCHF","CNYT","GYEN","ZUSD","GOLD","TRX","TRYB","PLATC","STRAX","UST","GLM","VAI","BRZ","DDRST","XAUT","MIM"],_e={[g.MOONPAY]:["AUD","BGN","BRL","CAD","CHF","CNY","COP","CZK","DKK","DOP","EGP","EUR","GBP","HKD","HRK","IDR","ILS","JPY","JOD","KES","KRW","KWD","LKR","MAD","MXN","MYR","NGN","NOK","NZD","OMR","PEN","PKR","PLN","RON","RUB","SEK","SGD","THB","TRY","TWD","USD","VND","ZAR"],[g.WYRE]:["USD","EUR","GBP","AUD","CAD","NZD","CNY","ARS","BRL","CHF","CLP","COP","CZK","DKK","HKD","ILS","INR","ISK","JPY","KRW","MXN","MYR","NOK","PHP","PLN","SEK","SGD","THB","VND","ZAR"],[g.RAMPNETWORK]:["USD","EUR","GBP","BMD","BAM","BWP","BRL","BGN","COP","CRC","CZK","DKK","DOP","GEL","GTQ","HNL","HUF","ISK","INR","ILS","KZT","KES","KWD","LAK","MKD","MYR","MXN","MDL","MZN","NZD","NGN","PYG","PEN","PLN","RON","RSD","SGD","ZAR","LKR","SEK","CHF","TJS","THB","UYU"],[g.XANPOOL]:["SGD","HKD","THB","PHP","INR","IDR","MYR","AUD","NZD","KRW"],[g.MERCURYO]:["EUR","USD","GBP","TRY","JPY","BRL","NGN","VND","MXN","KRW","PLN","SEK","CHF","CAD","CZK","DKK","BGN","HKD","AUD","INR"],[g.TRANSAK]:["ARS","AUD","BBD","BGN","BMD","BRL","CAD","CHF","CLP","CRC","CZK","DKK","DOP","EUR","FJD","FKP","GBP","GIP","HRK","HUF","IDR","ILS","ISK","JMD","JPY","KES","KRW","MDL","MXN","MYR","NOK","NZD","PEN","PHP","PLN","PYG","RON","SEK","SGD","THB","TRY","TZS","USD","ZAR"],[g.BANXA]:["AUD","CAD","CZK","DKK","EUR","GBP","HKD","JPY","NOK","NZD","NZD","PLN","RUB","SEK","SGD","TRY","USD"]},De=new Set(ve);function E(n){return _e[n].filter(t=>De.has(t))}const Ee={[g.MOONPAY]:{line1:"Credit/ Debit Card/ Apple Pay",line2:"4.5% or 5 USD",line3:"2,000€/day, 10,000€/mo",supportPage:"https://help.moonpay.io/en/",minOrderValue:24.99,maxOrderValue:5e4,validCurrencies:E(g.MOONPAY),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"aave",display:"AAVE"},{value:"bat",display:"BAT"},{value:"dai",display:"DAI"},{value:"eth",display:"ETH"},{value:"mkr",display:"MKR"},{value:"matic",display:"MATIC"},{value:"usdt",display:"USDT"},{value:"uni",display:"UNI"},{value:"usdc",display:"USDC"},{value:"weth",display:"WETH"}],[h.MATIC]:[{value:"eth_polygon",display:"ETH"},{value:"matic_polygon",display:"MATIC"},{value:"usdc_polygon",display:"USDC"},{value:"usdt_polygon",display:"USDT"}],[h.BSC_MAINNET]:[{value:"bnb_bsc",display:"BNB"},{value:"busd_bsc",display:"BUSD"}],[h.AVALANCHE_MAINNET]:[{value:"avax_cchain",display:"AVAX"},{value:"usdc_cchain",display:"USDC"}],[h.ARBITRUM_MAINNET]:[{value:"eth_arbitrum",display:"ETH"},{value:"usdc_arbitrum",display:"USDC"}],[h.OPTIMISM_MAINNET]:[{value:"eth_optimism",display:"ETH"},{value:"usdc_optimism",display:"USDC"}]},includeFees:!0,api:!0,enforceMax:!1},[g.WYRE]:{line1:"Apple Pay/ Debit/ Credit Card",line2:"4.9% + 30¢ or 5 USD",line3:"$250/day",supportPage:"https://support.sendwyre.com/en/",minOrderValue:5,maxOrderValue:500,validCurrencies:E(g.WYRE),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"AAVE",display:"AAVE"},{value:"COMP",display:"COMP"},{value:"BAT",display:"BAT"},{value:"BUSD",display:"BUSD"},{value:"DAI",display:"DAI"},{value:"ETH",display:"ETH"},{value:"WBTC",display:"WBTC"},{value:"MKR",display:"MKR"},{value:"UNI",display:"UNI"},{value:"WETH",display:"WETH"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"}],[h.MATIC]:[{value:"mUSDC",display:"USDC"},{value:"MATIC",display:"MATIC"},{value:"MWETH",display:"WETH"}],[h.AVALANCHE_MAINNET]:[{value:"AVAXC",display:"AVAX"},{value:"AVAXCUSDC",display:"USDC"}],[h.BSC_MAINNET]:[{value:"BNB",display:"BNB"},{value:"BBUSD",display:"BUSD"}]},includeFees:!1,api:!0,enforceMax:!1},[g.RAMPNETWORK]:{line1:"Debit Card/ <br>Apple Pay/ Bank transfer",line2:"0.49% - 2.9%",line3:"5,000€/purchase, 20,000€/mo",supportPage:"https://instant.ramp.network/",minOrderValue:50,maxOrderValue:2e4,validCurrencies:E(g.RAMPNETWORK),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"ETH",display:"ETH"},{value:"DAI",display:"DAI"},{value:"BAT",display:"BAT"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"}],[h.MATIC]:[{value:"MATIC_BAT",display:"BAT"},{value:"MATIC_DAI",display:"DAI"},{value:"MATIC_MATIC",display:"MATIC"},{value:"MATIC_USDC",display:"USDC"},{value:"MATIC_USDT",display:"USDT"}],[h.AVALANCHE_MAINNET]:[{value:"AVAX_AVAX",display:"AVAX"},{value:"AVAX_USDC",display:"USDC"},{value:"AVAX_USDT",display:"USDT"}],[h.ARBITRUM_MAINNET]:[{value:"ARBITRUM_ETH",display:"ETH"},{value:"ARBITRUM_USDC.e	",display:"USDC"},{value:"ARBITRUM_USDT",display:"USDT"}],[h.OPTIMISM_MAINNET]:[{value:"OPTIMISM_DAI",display:"DAI"},{value:"OPTIMISM_OPTIMISM",display:"OPTIMISM"},{value:"OPTIMISM_USDC",display:"USDC"},{value:"OPTIMISM_USDT",display:"USDT"}],[h.BSC_MAINNET]:[{value:"BSC_BNB",display:"BNB"},{value:"BSC_BUSD",display:"BUSD"}]},includeFees:!0,api:!0,receiveHint:"walletTopUp.receiveHintRamp",enforceMax:!1},[g.XANPOOL]:{line1:"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow",line2:"2.5% buying, 3% selling",line3:"$2,500 / day",supportPage:"mailto:support@xanpool.com",minOrderValue:100,maxOrderValue:2500,validCurrencies:E(g.XANPOOL),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"ETH",display:"ETH"},{value:"USDT",display:"USDT"},{value:"USDC",display:"USDC"}]},includeFees:!0,api:!0,sell:!0,enforceMax:!1},[g.MERCURYO]:{line1:"Credit/ Debit Card/ Apple Pay",line2:"3.95% or 4 USD",line3:"10,000€/day, 25,000€/mo",supportPage:"mailto:support@mercuryo.io",minOrderValue:30,maxOrderValue:5e3,validCurrencies:E(g.MERCURYO),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"ETH",display:"ETH"},{value:"BAT",display:"BAT"},{value:"USDT",display:"USDT"},{value:"DAI",display:"DAI"}],[h.BSC_MAINNET]:[{value:"BNB",display:"BNB"},{value:"BUSD",display:"BUSD"},{value:"1INCH",display:"1INCH"}],[h.AVALANCHE_MAINNET]:[{value:"AVAX",display:"AVAX"}],[h.MATIC]:[{value:"MATIC",display:"MATIC"}]},includeFees:!0,api:!0,enforceMax:!1},[g.TRANSAK]:{line1:"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy",line2:"0.99% - 5.5% or 5 USD",line3:"$5,000/day, $28,000/mo",supportPage:"https://support.transak.com/hc/en-US",minOrderValue:30,maxOrderValue:500,validCurrencies:E(g.TRANSAK),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"1INCH",display:"1INCH"},{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"DAI",display:"DAI"},{value:"ETH",display:"ETH"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"}],[h.MATIC]:[{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"DAI",display:"DAI"},{value:"MATIC",display:"MATIC"},{value:"USDC",display:"USDC"},{value:"USDT",display:"USDT"},{value:"WETH",display:"WETH"}],[h.BSC_MAINNET]:[{value:"BAT",display:"BAT"},{value:"BNB",display:"BNB"},{value:"BUSD",display:"BUSD"}],[h.AVALANCHE_MAINNET]:[{value:"AVAX",display:"AVAX"}],[h.OPTIMISM_MAINNET]:[{value:"ETH",display:"ETH"},{value:"USDC",display:"USDC"}],[h.ARBITRUM_MAINNET]:[{value:"USDC",display:"USDC"},{value:"ETH",display:"ETH"}]},includeFees:!0,enforceMax:!0},[g.BANXA]:{line1:"Debit Card/ <br>Apple Pay/ Bank transfer",line2:"0.49% - 2.9%",line3:"5,000€/purchase, 20,000€/mo",supportPage:"https://support.banxa.com",minOrderValue:20,maxOrderValue:15e3,validCurrencies:E(g.BANXA),validCryptoCurrenciesByChain:{[h.MAINNET]:[{value:"ETH",display:"ETH"},{value:"DAI",display:"DAI"},{value:"MKR",display:"MKR"},{value:"USDT",display:"USDT"},{value:"BUSD",display:"BUSD"},{value:"USDC",display:"USDC"},{value:"BAT",display:"BAT"},{value:"AAVE",display:"AAVE"},{value:"COMP",display:"COMP"},{value:"UNI",display:"UNI"}],[h.MATIC]:[{value:"MATIC",display:"MATIC"}]},includeFees:!0,enforceMax:!0}},Re={en:{embed:{continue:"Continue",actionRequired:"Authorization required",pendingAction:"Click continue to proceed with your request in a popup",cookiesRequired:"Cookies Required",enableCookies:"Please enable cookies in your browser preferences to access Torus",clickHere:"More Info"}},de:{embed:{continue:"Fortsetzen",actionRequired:"Autorisierung erforderlich",pendingAction:"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren",cookiesRequired:"Cookies benötigt",enableCookies:"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen",clickHere:"Mehr Info"}},ja:{embed:{continue:"継続する",actionRequired:"認証が必要です",pendingAction:"続行をクリックして、ポップアップでリクエストを続行します",cookiesRequired:"必要なクッキー",enableCookies:"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。",clickHere:"詳しくは"}},ko:{embed:{continue:"계속하다",actionRequired:"승인 필요",pendingAction:"팝업에서 요청을 진행하려면 계속을 클릭하십시오.",cookiesRequired:"쿠키 필요",enableCookies:"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.",clickHere:"더 많은 정보"}},zh:{embed:{continue:"继续",actionRequired:"需要授权",pendingAction:"单击继续以在弹出窗口中继续您的请求",cookiesRequired:"必填Cookie",enableCookies:"请在您的浏览器首选项中启用cookie以访问Torus。",clickHere:"更多信息"}}};var v={supportedVerifierList:Object.values(R),paymentProviders:Ee,api:"https://api.tor.us",translations:Re,prodTorusUrl:"",localStorageKeyPrefix:"torus-"};const M=n=>{const e=window.document.createElement("template"),t=n.trim();return e.innerHTML=t,e.content.firstChild},w=(n,e,t)=>{const i=s=>{t(s),n.removeListener(e,i)};n.on(e,i)};function Q(n){return n!==null&&typeof n=="object"&&typeof n.pipe=="function"}function Ne(n){return Q(n)&&n.writable!==!1&&typeof n._write=="function"&&typeof n._writableState=="object"}function be(n){return Q(n)&&n.readable!==!1&&typeof n._read=="function"&&typeof n._readableState=="object"}function Pe(n){return Ne(n)&&be(n)}var m=oe.getLogger("torus-embed"),T={errors:{disconnected:()=>"Torus: Lost connection to Torus.",permanentlyDisconnected:()=>"Torus: Disconnected from iframe. Page reload required.",sendSiteMetadata:()=>"Torus: Failed to send site metadata. This is an internal error, please report this bug.",unsupportedSync:n=>`Torus: The Torus Ethereum provider does not support synchronous methods like ${n} without a callback parameter.`,invalidDuplexStream:()=>"Must provide a Node.js-style duplex stream.",invalidOptions:(n,e)=>`Invalid options. Received: { maxEventListeners: ${n}, shouldSendMetadata: ${e} }`,invalidRequestArgs:()=>"Expected a single, non-array, object argument.",invalidRequestMethod:()=>"'args.method' must be a non-empty string.",invalidRequestParams:()=>"'args.params' must be an object or array if provided.",invalidLoggerObject:()=>"'args.logger' must be an object if provided.",invalidLoggerMethod:n=>`'args.logger' must include required method '${n}'.`},info:{connected:n=>`Torus: Connected to chain with ID "${n}".`},warnings:{enableDeprecation:'Torus: ""ethereum.enable()" is deprecated and may be removed in the future. Please use "ethereum.send("eth_requestAccounts")" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',sendDeprecation:`Torus: "ethereum.send(...)" is deprecated and may be removed in the future. Please use "ethereum.sendAsync(...)" or "ethereum.request(...)" instead.
For more information, see: https://eips.ethereum.org/EIPS/eip-1193`}};const{paymentProviders:F}=v,Me=(n,e)=>{const t={};if(!n)return{errors:t,isValid:!0};if(n&&!F[n])return t.provider="Invalid Provider",{errors:t,isValid:Object.keys(t).length===0};const i=F[n],s=e||{};if(s.fiatValue){const r=+parseFloat(s.fiatValue.toString())||0;r<i.minOrderValue&&(t.fiatValue="Requested amount is lower than supported"),r>i.maxOrderValue&&i.enforceMax&&(t.fiatValue="Requested amount is higher than supported")}if(s.selectedCurrency&&!i.validCurrencies.includes(s.selectedCurrency)&&(t.selectedCurrency="Unsupported currency"),s.selectedCryptoCurrency){const r=Object.values(i.validCryptoCurrenciesByChain).flat().map(l=>l.value),a=n===g.MOONPAY?s.selectedCryptoCurrency.toLowerCase():s.selectedCryptoCurrency;r&&!r.includes(a)&&(t.selectedCryptoCurrency="Unsupported cryptoCurrency")}return{errors:t,isValid:Object.keys(t).length===0}};function Ue(){return(n,e,t)=>{(typeof n.method!="string"||!n.method)&&(e.error=P.rpcErrors.invalidRequest({message:"The request 'method' must be a non-empty string.",data:y(y({},n||{}),{},{cause:"The request 'method' must be a non-empty string."})})),t(i=>{const{error:s}=e;return s&&m.error(`MetaMask - RPC Error: ${s.message}`,s),i()})}}function Oe(n,e,t){let i=`MetaMask: Lost connection to "${n}".`;e!=null&&e.stack&&(i+=`
${e.stack}`),m.warn(i),t&&t.listenerCount("error")>0&&t.emit("error",i)}const N=()=>Math.random().toString(36).slice(2),ee=async(n,e)=>{let t,i;const s="4.0.4";let r=e.version||s;try{if((n==="binance"||n==="production")&&!e.version){let a;v.prodTorusUrl?a={data:v.prodTorusUrl}:a=await J(`${v.api}/latestversion?name=@toruslabs/torus-embed&version=${s}`,{},{useAPIKey:!0}),r=a.data,v.prodTorusUrl=a.data}}catch(a){m.error(a,"unable to fetch latest version")}switch(m.info("version used: ",r),n){case"binance":t=`https://binance.tor.us/v${r}`,i="info";break;case"testing":t="https://testing.tor.us",i="debug";break;case"bnb":t="https://bnb.tor.us",i="error";break;case"polygon":t="https://polygon.tor.us",i="error";break;case"lrc":t="https://lrc.tor.us",i="debug";break;case"beta":t="https://beta.tor.us",i="debug";break;case"development":t="http://localhost:4050",i="debug";break;case"alpha":t="https://alpha.tor.us",i="debug";break;default:t=`https://app.tor.us/v${r}`,i="error";break}return{torusUrl:t,logLevel:i}},Y=()=>{let n=window.navigator.language||"en-US";const e=n.split("-");return n=Object.prototype.hasOwnProperty.call(v.translations,e[0])?e[0]:"en",n},Be=["eth_subscription"],te=()=>{},X="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375",Le="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315",Z="directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450";function ke(){const n=window.screenLeft!==void 0?window.screenLeft:window.screenX,e=window.screenTop!==void 0?window.screenTop:window.screenY,t=1200,i=700,s=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:window.screen.width,r=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:window.screen.height,a=1,l=Math.abs((s-t)/2/a+n),c=Math.abs((r-i)/2/a+e);return`titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${i/a},width=${t/a},top=${c},left=${l}`}H.defaultMaxListeners=100;const $=function(n,e){let t=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return(i,s)=>i||s.error?e(i||s.error):!t||Array.isArray(s)?n(s):n(s.result)};class B extends H{constructor(e){let{maxEventListeners:t=100,shouldSendMetadata:i=!0,jsonRpcStreamName:s="provider"}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(super(),o(this,"chainId",void 0),o(this,"selectedAddress",void 0),o(this,"_rpcEngine",void 0),o(this,"networkVersion",void 0),o(this,"shouldSendMetadata",void 0),o(this,"isTorus",void 0),o(this,"tryPreopenHandle",void 0),o(this,"enable",void 0),o(this,"_state",void 0),o(this,"_jsonRpcConnection",void 0),!Pe(e))throw new Error(T.errors.invalidDuplexStream());this.isTorus=!0,this.setMaxListeners(t),this._state=y({},B._defaultState),this.selectedAddress=null,this.networkVersion=null,this.chainId=null,this.shouldSendMetadata=i,this._handleAccountsChanged=this._handleAccountsChanged.bind(this),this._handleChainChanged=this._handleChainChanged.bind(this),this._handleUnlockStateChanged=this._handleUnlockStateChanged.bind(this),this._handleConnect=this._handleConnect.bind(this),this._handleDisconnect=this._handleDisconnect.bind(this),this._handleStreamDisconnect=this._handleStreamDisconnect.bind(this),this._sendSync=this._sendSync.bind(this),this._rpcRequest=this._rpcRequest.bind(this),this._initializeState=this._initializeState.bind(this),this.request=this.request.bind(this),this.send=this.send.bind(this),this.sendAsync=this.sendAsync.bind(this);const r=new le;V(e,r,e,this._handleStreamDisconnect.bind(this,"MetaMask")),r.ignoreStream("phishing"),this.on("connect",()=>{this._state.isConnected=!0});const a=de();V(a.stream,r.createStream(s),a.stream,this._handleStreamDisconnect.bind(this,"MetaMask RpcProvider"));const l=new ue;l.push(ce()),l.push(Ue()),l.push(a.middleware),this._rpcEngine=l,a.events.on("notification",c=>{const{method:u,params:d}=c;u==="wallet_accountsChanged"?this._handleAccountsChanged(d):u==="wallet_unlockStateChanged"?this._handleUnlockStateChanged(d):u==="wallet_chainChanged"?this._handleChainChanged(d):Be.includes(c.method)&&(this.emit("data",c),this.emit("notification",d.result),this.emit("message",{type:u,data:d}))})}isConnected(){return this._state.isConnected}async request(e){if(!e||typeof e!="object"||Array.isArray(e))throw P.rpcErrors.invalidRequest({message:T.errors.invalidRequestArgs(),data:y(y({},e||{}),{},{cause:T.errors.invalidRequestArgs()})});const{method:t,params:i}=e;if(typeof t!="string"||t.length===0)throw P.rpcErrors.invalidRequest({message:T.errors.invalidRequestMethod(),data:y(y({},e||{}),{},{cause:T.errors.invalidRequestArgs()})});if(i!==void 0&&!Array.isArray(i)&&(typeof i!="object"||i===null))throw P.rpcErrors.invalidRequest({message:T.errors.invalidRequestParams(),data:y(y({},e||{}),{},{cause:T.errors.invalidRequestArgs()})});return new Promise((s,r)=>{this._rpcRequest({method:t,params:i},$(s,r))})}sendAsync(e,t){this._rpcRequest(e,t)}async _initializeState(){try{const{accounts:e,chainId:t,isUnlocked:i,networkVersion:s}=await this.request({method:"wallet_getProviderState"});this.emit("connect",{chainId:t}),this._handleChainChanged({chainId:t,networkVersion:s}),this._handleUnlockStateChanged({accounts:e,isUnlocked:i}),this._handleAccountsChanged(e)}catch(e){m.error("MetaMask: Failed to get initial state. Please report this bug.",e)}finally{m.info("initialized state"),this._state.initialized=!0,this.emit("_initialized")}}_rpcRequest(e,t){let i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,s=t;const r=e;if(!Array.isArray(r)){if(r.jsonrpc||(r.jsonrpc="2.0"),r.method==="eth_accounts"||r.method==="eth_requestAccounts")s=(a,l)=>{this._handleAccountsChanged(l.result||[],r.method==="eth_accounts",i),t(a,l)};else if(r.method==="wallet_getProviderState"){this._rpcEngine.handle(e,s);return}}this.tryPreopenHandle(r,s)}send(e,t){return typeof e=="string"&&(!t||Array.isArray(t))?new Promise((i,s)=>{try{this._rpcRequest({method:e,params:t},$(i,s,!1))}catch(r){s(r)}}):e&&typeof e=="object"&&typeof t=="function"?this._rpcRequest(e,t):this._sendSync(e)}_sendSync(e){let t;switch(e.method){case"eth_accounts":t=this.selectedAddress?[this.selectedAddress]:[];break;case"eth_coinbase":t=this.selectedAddress||null;break;case"eth_uninstallFilter":this._rpcRequest(e,te),t=!0;break;case"net_version":t=this.networkVersion||null;break;default:throw new Error(T.errors.unsupportedSync(e.method))}return{id:e.id,jsonrpc:e.jsonrpc,result:t}}_handleConnect(e){this._state.isConnected||(this._state.isConnected=!0,this.emit("connect",{chainId:e}),m.debug(T.info.connected(e)))}_handleDisconnect(e,t){if(this._state.isConnected||!this._state.isPermanentlyDisconnected&&!e){this._state.isConnected=!1;let i;e?(i=new P.EthereumProviderError(1013,t||T.errors.disconnected()),m.debug(i)):(i=new P.EthereumProviderError(1011,t||T.errors.permanentlyDisconnected()),m.error(i),this.chainId=null,this._state.accounts=null,this.selectedAddress=null,this._state.isUnlocked=!1,this._state.isPermanentlyDisconnected=!0),this.emit("disconnect",i)}}_handleStreamDisconnect(e,t){Oe(e,t,this),this._handleDisconnect(!1,t?t.message:void 0)}_handleAccountsChanged(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,i=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,s=e;Array.isArray(s)||(m.error("MetaMask: Received non-array accounts parameter. Please report this bug.",s),s=[]);for(const r of e)if(typeof r!="string"){m.error("MetaMask: Received non-string account. Please report this bug.",e),s=[];break}Te(this._state.accounts,s)||(t&&Array.isArray(this._state.accounts)&&this._state.accounts.length>0&&!i&&m.error('MetaMask: "eth_accounts" unexpectedly updated accounts. Please report this bug.',s),this._state.accounts=s,this.emit("accountsChanged",s)),this.selectedAddress!==s[0]&&(this.selectedAddress=s[0]||null)}_handleChainChanged(){let{chainId:e,networkVersion:t}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!e||!t){m.error("MetaMask: Received invalid network parameters. Please report this bug.",{chainId:e,networkVersion:t});return}t==="loading"?this._handleDisconnect(!0):(this._handleConnect(e),e!==this.chainId&&(this.chainId=e,this._state.initialized&&this.emit("chainChanged",this.chainId)))}_handleUnlockStateChanged(){let{accounts:e,isUnlocked:t}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(typeof t!="boolean"){m.error("MetaMask: Received invalid isUnlocked parameter. Please report this bug.",{isUnlocked:t});return}t!==this._state.isUnlocked&&(this._state.isUnlocked=t,this._handleAccountsChanged(e||[]))}}o(B,"_defaultState",{accounts:null,isConnected:!1,isUnlocked:!1,initialized:!1,isPermanentlyDisconnected:!1,hasEmittedConnection:!1});class z extends H{constructor(e){let{url:t,target:i,features:s,timeout:r=3e4}=e;super(),o(this,"url",void 0),o(this,"target",void 0),o(this,"features",void 0),o(this,"window",void 0),o(this,"windowTimer",void 0),o(this,"iClosedWindow",void 0),o(this,"timeout",void 0),this.url=t,this.target=i||"_blank",this.features=s||ke(),this.window=void 0,this.windowTimer=void 0,this.iClosedWindow=!1,this.timeout=r,this._setupTimer()}_setupTimer(){this.windowTimer=Number(setInterval(()=>{this.window&&this.window.closed&&(clearInterval(this.windowTimer),setTimeout(()=>{this.iClosedWindow||this.emit("close"),this.iClosedWindow=!1,this.window=void 0},this.timeout)),this.window===void 0&&clearInterval(this.windowTimer)},500))}open(){var e;this.window=window.open(this.url.href,this.target,this.features),(e=this.window)!==null&&e!==void 0&&e.focus&&this.window.focus()}close(){this.iClosedWindow=!0,this.window&&this.window.close()}redirect(e){e?window.location.replace(this.url.href):window.location.href=this.url.href}}function j(n){return new Promise((e,t)=>{try{const i=document.createElement("img");i.onload=()=>e(!0),i.onerror=()=>e(!1),i.src=n}catch(i){t(i)}})}const He=n=>{const{document:e}=n,t=e.querySelector('head > meta[property="og:site_name"]');if(t)return t.content;const i=e.querySelector('head > meta[name="title"]');return i?i.content:e.title&&e.title.length>0?e.title:n.location.hostname};async function Ke(n){const{document:e}=n;let t=e.querySelector('head > link[rel="shortcut icon"]');return t&&await j(t.href)||(t=Array.from(e.querySelectorAll('head > link[rel="icon"]')).find(i=>!!i.href),t&&await j(t.href))?t.href:null}const We=async()=>({name:He(window),icon:await Ke(window)});async function Ve(n){try{const e=await We();n.handle({jsonrpc:"2.0",id:N(),method:"wallet_sendDomainMetadata",params:e},te)}catch(e){m.error({message:T.errors.sendSiteMetadata(),originalError:e})}}const xe=["host","chainId","networkName"],qe=["eth_sendTransaction","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","wallet_addEthereumChain","wallet_switchEthereumChain"];(async function(){try{if(typeof document>"u")return;const e=document.createElement("link"),{torusUrl:t}=await ee("production",{version:""});e.href=`${t}/popup`,e.crossOrigin="anonymous",e.type="text/html",e.rel="prefetch",e.relList&&e.relList.supports&&e.relList.supports("prefetch")&&document.head.appendChild(e)}catch(e){m.warn(e)}})();class Ge{constructor(){let{buttonPosition:e=b.BOTTOM_LEFT,buttonSize:t=56,modalZIndex:i=99999,apiKey:s="torus-default"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};o(this,"buttonPosition",b.BOTTOM_LEFT),o(this,"buttonSize",void 0),o(this,"torusUrl",void 0),o(this,"torusIframe",void 0),o(this,"styleLink",void 0),o(this,"isLoggedIn",void 0),o(this,"isInitialized",void 0),o(this,"torusWidgetVisibility",void 0),o(this,"torusAlert",void 0),o(this,"apiKey",void 0),o(this,"modalZIndex",void 0),o(this,"alertZIndex",void 0),o(this,"torusAlertContainer",void 0),o(this,"isIframeFullScreen",void 0),o(this,"whiteLabel",void 0),o(this,"requestedVerifier",void 0),o(this,"currentVerifier",void 0),o(this,"embedTranslations",void 0),o(this,"ethereum",void 0),o(this,"provider",void 0),o(this,"communicationMux",void 0),o(this,"isLoginCallback",void 0),o(this,"paymentProviders",v.paymentProviders),o(this,"loginHint",""),o(this,"useWalletConnect",void 0),o(this,"isCustomLogin",!1),this.buttonPosition=e,this.buttonSize=t,this.torusUrl="",this.isLoggedIn=!1,this.isInitialized=!1,this.torusWidgetVisibility=!0,this.requestedVerifier="",this.currentVerifier="",this.apiKey=s,me(s),this.modalZIndex=i,this.alertZIndex=i+1e3,this.isIframeFullScreen=!1}async init(){let{buildEnv:e=we.PRODUCTION,enableLogging:t=!1,network:i={host:"mainnet",chainId:null,networkName:"",blockExplorer:"",ticker:"",tickerName:""},loginConfig:s={},showTorusButton:r=!0,integrity:a={version:""},whiteLabel:l,useWalletConnect:c=!1,mfaLevel:u="default"}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(this.isInitialized)throw new Error("Already initialized");const{torusUrl:d,logLevel:p}=await ee(e,a);m.info(d,"url loaded"),this.torusUrl=d,this.whiteLabel=l,this.useWalletConnect=c,this.isCustomLogin=!!(s&&Object.keys(s).length>0)||!!(l&&Object.keys(l).length>0),m.setDefaultLevel(p),t?m.enableAll():m.disableAll(),this.torusWidgetVisibility=r;const f=new URL(d);f.pathname.endsWith("/")?f.pathname+="popup":f.pathname+="/popup",f.hash=`#isCustomLogin=${this.isCustomLogin}`,this.torusIframe=M(`<iframe
        id="torusIframe"
        allow=${c?"camera":""}
        class="torusIframe"
        src="${f.href}"
        style="display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;
        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}"
      ></iframe>`),this.torusAlertContainer=M('<div id="torusAlertContainer"></div>'),this.torusAlertContainer.style.display="none",this.torusAlertContainer.style.setProperty("z-index",this.alertZIndex.toString());const A=window.document.createElement("link");A.setAttribute("rel","stylesheet"),A.setAttribute("type","text/css"),A.setAttribute("href",`${d}/css/widget.css`),this.styleLink=A;const{defaultLanguage:C=Y(),customTranslations:I={}}=this.whiteLabel||{},D=he(v.translations,I)[C]||v.translations[Y()];return this.embedTranslations=D.embed,new Promise((ie,se)=>{this.torusIframe.onload=async()=>{this._setupWeb3();const K=this.communicationMux.getStream("init_stream");K.on("data",ne=>{const{name:re,data:ae,error:W}=ne;re==="init_complete"&&ae.success?(this.isInitialized=!0,this._displayIframe(this.isIframeFullScreen),ie(void 0)):W&&se(new Error(W))}),K.write({name:"init_stream",data:{loginConfig:s,whiteLabel:this.whiteLabel,buttonPosition:this.buttonPosition,buttonSize:this.buttonSize,torusWidgetVisibility:this.torusWidgetVisibility,apiKey:this.apiKey,network:i,mfaLevel:u}})},window.document.head.appendChild(this.styleLink),window.document.body.appendChild(this.torusIframe),window.document.body.appendChild(this.torusAlertContainer)})}login(){let{verifier:e="",login_hint:t=""}=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};if(!this.isInitialized)throw new Error("Call init() first");return this.requestedVerifier=e,this.loginHint=t,this.ethereum.enable()}logout(){return new Promise((e,t)=>{if(!this.isLoggedIn){t(new Error("User has not logged in yet"));return}this.communicationMux.getStream("logout").write({name:"logOut"});const s=this.communicationMux.getStream("status");w(s,"data",a=>{a.loggedIn?t(new Error("Some Error Occured")):(this.isLoggedIn=!1,this.currentVerifier="",this.requestedVerifier="",e())})})}async cleanUp(){this.isLoggedIn&&await this.logout(),this.clearInit()}clearInit(){function e(t){return t instanceof Element||t instanceof HTMLDocument}e(this.styleLink)&&window.document.body.contains(this.styleLink)&&(this.styleLink.remove(),this.styleLink=void 0),e(this.torusIframe)&&window.document.body.contains(this.torusIframe)&&(this.torusIframe.remove(),this.torusIframe=void 0),e(this.torusAlertContainer)&&window.document.body.contains(this.torusAlertContainer)&&(this.torusAlert=void 0,this.torusAlertContainer.remove(),this.torusAlertContainer=void 0),this.isInitialized=!1}hideTorusButton(){this.torusWidgetVisibility=!1,this._sendWidgetVisibilityStatus(!1),this._displayIframe()}showTorusButton(){this.torusWidgetVisibility=!0,this._sendWidgetVisibilityStatus(!0),this._displayIframe()}setProvider(e){let{host:t="mainnet",chainId:i=null,networkName:s=""}=e,r=Ie(e,xe);return new Promise((a,l)=>{const c=this.communicationMux.getStream("provider_change");w(c,"data",p=>{const f=p,{err:A,success:C}=f.data;m.info(f),A?l(A):C?a():l(new Error("some error occurred"))});const d=N();this._handleWindow(d,{target:"_blank",features:X}),c.write({name:"show_provider_change",data:{network:y({host:t,chainId:i,networkName:s},r),preopenInstanceId:d,override:!1}})})}showWallet(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const i=this.communicationMux.getStream("show_wallet"),s=e?`/${e}`:"";i.write({name:"show_wallet",data:{path:s}}),w(i,"data",a=>{const l=a;if(l.name==="show_wallet_instance"){const{instanceId:c}=l.data,u=new URL(`${this.torusUrl}/wallet${s}`);u.searchParams.append("integrity","true"),u.searchParams.append("instanceId",c),Object.keys(t).forEach(p=>{u.searchParams.append(p,t[p])}),u.hash=`#isCustomLogin=${this.isCustomLogin}`,new z({url:u,features:Le}).open()}})}async getPublicAddress(e){let{verifier:t,verifierId:i,isExtended:s=!1}=e;if(!v.supportedVerifierList.includes(t)||!G[t])throw new Error("Unsupported verifier");const r=t,a=G[t],l=new URL("https://api.tor.us/lookup/torus");return l.searchParams.append("verifier",a),l.searchParams.append("verifierId",i),l.searchParams.append("walletVerifier",r),l.searchParams.append("network","mainnet"),l.searchParams.append("isExtended",s.toString()),J(l.href,{headers:{"Content-Type":"application/json; charset=utf-8"}},{useAPIKey:!0})}getUserInfo(e){return new Promise((t,i)=>{if(this.isLoggedIn){const s=this.communicationMux.getStream("user_info_access");s.write({name:"user_info_access_request"}),w(s,"data",a=>{const l=a,{name:c,data:{approved:u,payload:d,rejected:p,newRequest:f}}=l;if(c==="user_info_access_response"){if(u)t(d);else if(p)i(new Error("User rejected the request"));else if(f){const A=this.communicationMux.getStream("user_info");w(A,"data",_=>{const D=_;D.name==="user_info_response"&&(D.data.approved?t(D.data.payload):i(new Error("User rejected the request")))});const I=N();this._handleWindow(I,{target:"_blank",features:X}),A.write({name:"user_info_request",data:{message:e,preopenInstanceId:I}})}}})}else i(new Error("User has not logged in yet"))})}initiateTopup(e,t){return new Promise((i,s)=>{if(this.isInitialized){const{errors:r,isValid:a}=Me(e,t);if(!a){s(new Error(JSON.stringify(r)));return}const l=this.communicationMux.getStream("topup");w(l,"data",d=>{const p=d;p.name==="topup_response"&&(p.data.success?i(p.data.success):s(new Error(p.data.error)))});const u=N();this._handleWindow(u),l.write({name:"topup_request",data:{provider:e,params:t,preopenInstanceId:u}})}else s(new Error("Torus is not initialized yet"))})}async loginWithPrivateKey(e){const{privateKey:t,userInfo:i}=e;return new Promise((s,r)=>{if(this.isInitialized){if(Buffer.from(t,"hex").length!==32){r(new Error("Invalid private key, Please provide a 32 byte valid secp25k1 private key"));return}const a=this.communicationMux.getStream("login_with_private_key");w(a,"data",c=>{const u=c;u.name==="login_with_private_key_response"&&(u.data.success?s(u.data.success):r(new Error(u.data.error)))}),a.write({name:"login_with_private_key_request",data:{privateKey:t,userInfo:i}})}else r(new Error("Torus is not initialized yet"))})}async showWalletConnectScanner(){if(!this.useWalletConnect)throw new Error("Set `useWalletConnect` as true in init function options to use wallet connect scanner");return new Promise((e,t)=>{if(this.isLoggedIn){const i=this.communicationMux.getStream("wallet_connect_stream");w(i,"data",r=>{const a=r;a.name==="wallet_connect_stream_res"&&(a.data.success?e(a.data.success):t(new Error(a.data.error)),this._displayIframe())}),i.write({name:"wallet_connect_stream_req"}),this._displayIframe(!0)}else t(new Error("User has not logged in yet"))})}_handleWindow(e){let{url:t,target:i,features:s}=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(e){const r=this.communicationMux.getStream("window"),a=new URL(t||`${this.torusUrl}/redirect?preopenInstanceId=${e}`);a.hash?a.hash+=`&isCustomLogin=${this.isCustomLogin}`:a.hash=`#isCustomLogin=${this.isCustomLogin}`;const l=new z({url:a,target:i,features:s});if(l.open(),!l.window){this._createPopupBlockAlert(e,a.href);return}r.write({name:"opened_window",data:{preopenInstanceId:e}});const c=u=>{let{preopenInstanceId:d,close:p}=u;d===e&&p&&(l.close(),r.removeListener("data",c))};r.on("data",c),l.once("close",()=>{r.write({data:{preopenInstanceId:e,closed:!0}}),r.removeListener("data",c)})}}_setEmbedWhiteLabel(e){const{theme:t}=this.whiteLabel||{};if(t){const{isDark:i=!1,colors:s={}}=t;i&&e.classList.add("torus-dark"),s.torusBrand1&&e.style.setProperty("--torus-brand-1",s.torusBrand1),s.torusGray2&&e.style.setProperty("--torus-gray-2",s.torusGray2)}}_getLogoUrl(){var e;let t=`${this.torusUrl}/images/torus_icon-blue.svg`;if((e=this.whiteLabel)!==null&&e!==void 0&&(e=e.theme)!==null&&e!==void 0&&e.isDark){var i;t=((i=this.whiteLabel)===null||i===void 0?void 0:i.logoLight)||t}else{var s;t=((s=this.whiteLabel)===null||s===void 0?void 0:s.logoDark)||t}return t}_sendWidgetVisibilityStatus(e){this.communicationMux.getStream("torus-widget-visibility").write({data:e})}_displayIframe(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;const t={},i=this.buttonSize+14;if(e)t.display="block",t.width="100%",t.height="100%",t.top="0px",t.right="0px",t.left="0px",t.bottom="0px";else switch(t.display=this.torusWidgetVisibility?"block":"none",t.height=`${i}px`,t.width=`${i}px`,this.buttonPosition){case b.TOP_LEFT:t.top="0px",t.left="0px",t.right="auto",t.bottom="auto";break;case b.TOP_RIGHT:t.top="0px",t.right="0px",t.left="auto",t.bottom="auto";break;case b.BOTTOM_RIGHT:t.bottom="0px",t.right="0px",t.top="auto",t.left="auto";break;case b.BOTTOM_LEFT:default:t.bottom="0px",t.left="0px",t.top="auto",t.right="auto";break}Object.assign(this.torusIframe.style,t),this.isIframeFullScreen=e}_setupWeb3(){m.info("setupWeb3 running");const e=new x({name:"embed_metamask",target:"iframe_metamask",targetWindow:this.torusIframe.contentWindow,targetOrigin:new URL(this.torusUrl).origin}),t=new x({name:"embed_comm",target:"iframe_comm",targetWindow:this.torusIframe.contentWindow,targetOrigin:new URL(this.torusUrl).origin}),i=new B(e),s=d=>{const p=i[d];i[d]=function(A){if(A&&A==="eth_requestAccounts")return i.enable();for(var C=arguments.length,I=new Array(C>1?C-1:0),_=1;_<C;_++)I[_-1]=arguments[_];return p.apply(this,[A,...I])}};s("send"),s("sendAsync"),i.enable=()=>new Promise((d,p)=>{i.sendAsync({jsonrpc:"2.0",id:N(),method:"eth_requestAccounts",params:[]},(f,A)=>{const{result:C}=A||{};if(f)setTimeout(()=>{p(f)},50);else if(Array.isArray(C)&&C.length>0){const I=()=>{if(this.requestedVerifier!==""&&this.currentVerifier!==this.requestedVerifier){const{requestedVerifier:_}=this;this.logout().then(D=>{this.requestedVerifier=_,this._showLoginPopup(!0,d,p)}).catch(D=>p(D))}else d(C)};this.isLoggedIn?I():this.isLoginCallback=I}else this._showLoginPopup(!0,d,p)})}),i.tryPreopenHandle=(d,p)=>{const f=d;if(!Array.isArray(f)&&qe.includes(f.method)){const A=N();this._handleWindow(A,{target:"_blank",features:Z}),f.preopenInstanceId=A}i._rpcEngine.handle(f,p)};const r=new Proxy(i,{deleteProperty:()=>!0});this.ethereum=r;const a=pe(t);this.communicationMux=a,a.getStream("window").on("data",d=>{d.name==="create_window"&&this._createPopupBlockAlert(d.data.preopenInstanceId,d.data.url)}),a.getStream("widget").on("data",d=>{const{data:p}=d;this._displayIframe(p)}),a.getStream("status").on("data",d=>{d.loggedIn?(this.isLoggedIn=d.loggedIn,this.currentVerifier=d.verifier):this._displayIframe(),this.isLoginCallback&&(this.isLoginCallback(),delete this.isLoginCallback)}),this.provider=r,this.provider.shouldSendMetadata&&Ve(this.provider._rpcEngine),i._initializeState(),m.debug("Torus - injected provider")}_showLoginPopup(e,t,i){const s=a=>{const l=a,{err:c,selectedAddress:u}=l;c?(m.error(c),i&&i(c)):t&&t([u]),this.isIframeFullScreen&&this._displayIframe()},r=this.communicationMux.getStream("oauth");if(!this.requestedVerifier)this._displayIframe(!0),w(r,"data",s),r.write({name:"oauth_modal",data:{calledFromEmbed:e}});else{w(r,"data",s);const a=N();this._handleWindow(a),r.write({name:"oauth",data:{calledFromEmbed:e,verifier:this.requestedVerifier,preopenInstanceId:a,login_hint:this.loginHint}})}}_createPopupBlockAlert(e,t){const i=this._getLogoUrl(),s=M(`<div id="torusAlert" class="torus-alert--v2"><div id="torusAlert__logo"><img src="${i}" /></div><div><h1 id="torusAlert__title">${this.embedTranslations.actionRequired}</h1><p id="torusAlert__desc">${this.embedTranslations.pendingAction}</p></div></div>`),r=M(`<div><a id="torusAlert__btn">${this.embedTranslations.continue}</a></div>`),a=M('<div id="torusAlert__btn-container"></div>');a.appendChild(r),s.appendChild(a),this._setEmbedWhiteLabel(s),this.torusAlertContainer.style.display="block",this.torusAlertContainer.appendChild(s),r.addEventListener("click",()=>{this._handleWindow(e,{url:t,target:"_blank",features:Z}),s.remove(),this.torusAlertContainer.children.length===0&&(this.torusAlertContainer.style.display="none")})}}class $e extends ge{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};super(e),o(this,"name",U.TORUS_EVM),o(this,"adapterNamespace",fe.EIP155),o(this,"currentChainNamespace",Ae.EIP155),o(this,"type",ye.EXTERNAL),o(this,"status",S.NOT_READY),o(this,"torusInstance",null),o(this,"torusWalletOptions",void 0),o(this,"initParams",void 0),o(this,"loginSettings",{}),this.torusWalletOptions=e.adapterSettings||{},this.initParams=e.initParams||{},this.loginSettings=e.loginSettings||{}}get provider(){return this.status!==S.NOT_READY&&this.torusInstance?this.torusInstance.provider:null}set provider(e){throw new Error("Not implemented")}async init(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};await super.init(e),super.checkInitializationRequirements();const{chainId:t,blockExplorer:i,displayName:s,rpcTarget:r,ticker:a,tickerName:l}=this.chainConfig,c={chainId:Number.parseInt(t,16),host:r,blockExplorer:i,networkName:s,ticker:a,tickerName:l};this.torusInstance=new Ge(this.torusWalletOptions),L.debug("initializing torus evm adapter init"),await this.torusInstance.init(y(y({showTorusButton:!1},this.initParams),{},{network:c})),this.status=S.READY,this.emit(k.READY,U.TORUS_EVM);try{L.debug("initializing torus evm adapter"),e.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(u){L.error("Failed to connect with torus evm provider",u),this.emit(k.ERRORED,u)}}async connect(){if(super.checkConnectionRequirements(),!this.torusInstance)throw O.notReady("Torus wallet is not initialized");this.status=S.CONNECTING,this.emit(k.CONNECTING,{adapter:U.TORUS_EVM});try{await this.torusInstance.login(this.loginSettings);const e=await this.torusInstance.provider.request({method:"eth_chainId"});if(e&&parseInt(e)!==parseInt(this.chainConfig.chainId,16)){const{chainId:t,blockExplorer:i,displayName:s,rpcTarget:r,ticker:a,tickerName:l}=this.chainConfig,c={chainId:Number.parseInt(t,16),host:r,blockExplorer:i,networkName:s,tickerName:l,ticker:a};await this.torusInstance.setProvider(y({},c));const u=await this.torusInstance.ethereum.request({method:"eth_chainId"});if(u&&parseInt(u)!==parseInt(this.chainConfig.chainId,16))throw O.fromCode(5e3,`Not connected to correct chainId. Expected: ${this.chainConfig.chainId}, Current: ${u}`)}return this.status=S.CONNECTED,this.torusInstance.showTorusButton(),this.emit(S.CONNECTED,{adapter:U.TORUS_EVM,reconnected:this.rehydrated}),this.provider}catch(e){throw this.status=S.READY,this.rehydrated=!1,this.emit(S.ERRORED,e),e instanceof Ce?e:q.connectionError("Failed to login with torus wallet")}}async disconnect(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{cleanup:!1};if(await super.disconnectSession(),!this.torusInstance)throw O.notReady("Torus wallet is not initialized");await this.torusInstance.logout(),this.torusInstance.hideTorusButton(),e.cleanup?(this.status=S.NOT_READY,this.torusInstance=null):this.status=S.READY,await super.disconnect()}async getUserInfo(){if(this.status!==S.CONNECTED)throw q.notConnectedError("Not connected with wallet");if(!this.torusInstance)throw O.notReady("Torus wallet is not initialized");return await this.torusInstance.getUserInfo("")}async addChain(e){let t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;super.checkAddChainRequirements(e,t),this.addChainConfig(e)}async switchChain(e){var t;let i=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;super.checkSwitchChainRequirements(e,i);const s=this.getChainConfig(e.chainId);await((t=this.torusInstance)===null||t===void 0?void 0:t.setProvider({host:s.rpcTarget,chainId:parseInt(s.chainId,16),networkName:s.displayName,blockExplorer:s.blockExplorer,ticker:s.ticker,tickerName:s.tickerName})),this.setAdapterSettings({chainConfig:this.getChainConfig(e.chainId)})}}export{$e as TorusWalletAdapter};
